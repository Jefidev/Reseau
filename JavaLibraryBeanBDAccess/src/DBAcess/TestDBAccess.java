/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DBAcess;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import newBean.*;

/**
 *
 * @author Utilisateur
 */
public class TestDBAccess extends javax.swing.JFrame {
    
    InterfaceBeansDBAccess beanBDD;
    /**
     * Creates new form TestDBAccess
     */
    public TestDBAccess() {
        initComponents();

        System.out.println("Initialisation");
        BeanBDAccess b = new BeanBDAccess();
        
        System.out.println("Connexion");
        try {
            b.connexionOracle("localhost", 1521, "TRAFIC", "TRAFIC", "XE");
        } catch (ClassNotFoundException ex) {
            System.err.println("classe not found  : " + ex.getMessage());
        } catch (SQLException ex) {
            System.err.println("Exception SQL " + ex.getMessage());
        } catch (connexionException ex) {
            System.err.println(ex.getNumException() + "  " + ex.getMessage());
        }
        
        System.out.println("Tables disponibles");
        try {
            ArrayList<String> l = new ArrayList<>(b.tablesDisponibles());
        } catch (requeteException ex) {
            System.err.println(ex.getNumErreur() + "  " + ex.getMessage());
        }
        
        System.out.println("Selection");
        
        try {
            b.selection("*", "utilisateurs", null);
        } catch (SQLException ex) {
            System.err.println("SQLException : " + ex);
        }
        
        
        System.out.println("Ecriture");
        HashMap user = new HashMap();
        user.put("LOGIN", "oce");
        user.put("PASSWORD", "ocepwd");
        
        try {
            b.ecriture("utilisateurs", user);
        } catch (requeteException ex) {
            System.err.println(ex.getNumErreur() + "  " + ex.getMessage());
        }

        System.out.println("Selection");
        
        try {
            b.selection("*", "utilisateurs", null);
        } catch (SQLException ex) {
            System.err.println("SQLException " + ex.getMessage());
        }
         
        
        System.out.println("Modification");
        HashMap user2 = new HashMap();
        user2.put("PASSWORD", "NEWPWD");
        
        try {
            b.miseAJour("utilisateurs", user2, "LOGIN = 'oce'");
        } catch (requeteException ex) {
            System.err.println(ex.getNumErreur() + "  " + ex.getMessage());
        }
        
        
        System.out.println("Selection");
        
        try {
            b.selection("*", "utilisateurs", null);
        } catch (SQLException ex) {
            System.err.println("SQL EXCEPTION : " + ex.getMessage());
        }
        
        System.out.println("Modification");
        HashMap modif = new HashMap();
        modif.put("DISTANCE_ROUTE", "30");
        
        try {
            b.miseAJour("destinations", modif, "VILLE = 'Verviers'");
        } catch (requeteException ex) {
            System.err.println(ex.getNumErreur() + "  " + ex.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestDBAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestDBAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestDBAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestDBAccess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestDBAccess().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
